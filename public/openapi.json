{
  "openapi": "3.0.0",
  "info": {
    "title": "Equipment Management API",
    "version": "1.0.0",
    "description": "Comprehensive API for managing equipment designs, users, activities, vendors, alerts, logs, and related operations"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Equipment Designs",
      "description": "Operations related to equipment designs"
    },
    {
      "name": "Users",
      "description": "Operations related to user management"
    },
    {
      "name": "Activities",
      "description": "Operations related to user activities and events"
    },
    {
      "name": "Vendors",
      "description": "Operations related to equipment vendors"
    },
    {
      "name": "Alerts",
      "description": "Operations related to system alerts and notifications"
    },
    {
      "name": "Logs",
      "description": "Operations related to system logs"
    },
    {
      "name": "Uploads",
      "description": "Operations related to file uploads"
    }
  ],
  "paths": {
    "/api/equipment-designs": {
      "get": {
        "tags": ["Equipment Designs"],
        "summary": "Get all equipment designs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search term for filtering designs"
          }
        ],
        "responses": {
          "200": {
            "description": "List of equipment designs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EquipmentDesign"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Equipment Designs"],
        "summary": "Create a new equipment design",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentDesignInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Equipment design created successfully"
          }
        }
      }
    },
    "/api/equipment-designs/{id}": {
      "get": {
        "tags": ["Equipment Designs"],
        "summary": "Get equipment design by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Equipment design details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquipmentDesign"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Equipment Designs"],
        "summary": "Update equipment design",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EquipmentDesignInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Equipment design updated successfully"
          }
        }
      },
      "delete": {
        "tags": ["Equipment Designs"],
        "summary": "Delete equipment design",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Equipment design deleted successfully"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          }
        }
      }
    },
    "/api/activities": {
      "get": {
        "tags": ["Activities"],
        "summary": "Get all activities",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/vendors": {
      "get": {
        "tags": ["Vendors"],
        "summary": "Get all vendors",
        "responses": {
          "200": {
            "description": "List of vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Vendors"],
        "summary": "Create a new vendor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vendor created successfully"
          }
        }
      }
    },
    "/api/alerts": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Get all alerts",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["active", "resolved", "dismissed"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Alert"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "tags": ["Logs"],
        "summary": "Get all logs",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "level",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["info", "warning", "error"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Log"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/uploads": {
      "post": {
        "tags": ["Uploads"],
        "summary": "Upload a new file",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["document", "image", "other"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EquipmentDesign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "specifications": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": ["draft", "published", "archived"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EquipmentDesignInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "specifications": {
            "type": "object"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "manager"]
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive"]
          }
        }
      },
      "UserInput": {
        "type": "object",
        "required": ["email", "name", "role"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user", "manager"]
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "contact": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "VendorInput": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "contact": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "Alert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["warning", "error", "info"]
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["active", "resolved", "dismissed"]
          }
        }
      },
      "Log": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level": {
            "type": "string",
            "enum": ["info", "warning", "error"]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "totalItems": {
            "type": "integer"
          },
          "itemsPerPage": {
            "type": "integer"
          }
        }
      }
    }
  }
} 